name: Release to Maven Central

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: oss
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Set release version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        else
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        fi
        
    - name: Deploy structure-dependencies
      run: |
        cd structure-dependencies
        mvn clean deploy -P release,oss -Dmaven.test.skip=true -Drevision=$RELEASE_VERSION -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -s ../.mvn/settings.xml
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Deploy structure-common
      run: |
        cd structure-common
        mvn clean deploy -P release,oss -Dmaven.test.skip=true -Drevision=$RELEASE_VERSION -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -s ../.mvn/settings.xml
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Deploy structure-boot-parent
      run: |
        cd structure-boot-parent
        mvn clean deploy -P release,oss -Dmaven.test.skip=true -Drevision=$RELEASE_VERSION -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -s ../.mvn/settings.xml
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: maven-artifacts-${{ env.RELEASE_VERSION }}
        path: |
          structure-dependencies/target/*
          structure-common/target/*
          structure-boot-parent/target/*